---
import "../styles/global.css";
---

<!doctype html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Minecraft Resources Manager</title>
        <script src="https://unpkg.com/htmx.org@1.9.10"></script>
        <style>
            @import url("https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&display=swap");

            :root {
                --minecraft-green: #00ff88;
                --minecraft-green-dark: #00cc6a;
                --minecraft-green-darker: #00aa55;
                --neon-blue: #00d4ff;
                --neon-purple: #b347d9;
                --glass-bg: rgba(15, 23, 42, 0.4);
                --glass-bg-light: rgba(30, 41, 59, 0.3);
                --glass-border: rgba(0, 255, 136, 0.4);
                --shadow-neon: 0 0 30px rgba(0, 255, 136, 0.3);
                --shadow-neon-hover: 0 0 50px rgba(0, 255, 136, 0.5);
            }

            body {
                font-family: "Orbitron", monospace;
                background: radial-gradient(
                    ellipse at top,
                    #1a1a2e 0%,
                    #16213e 50%,
                    #0f0f23 100%
                );
                background-attachment: fixed;
                position: relative;
                overflow-x: hidden;
                min-height: 100vh;
            }

            /* Partículas de fondo animadas */
            body::before {
                content: "";
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-image: radial-gradient(
                        circle at 25% 25%,
                        rgba(0, 255, 136, 0.1) 0%,
                        transparent 50%
                    ),
                    radial-gradient(
                        circle at 75% 75%,
                        rgba(0, 212, 255, 0.1) 0%,
                        transparent 50%
                    ),
                    radial-gradient(
                        circle at 50% 50%,
                        rgba(179, 71, 217, 0.05) 0%,
                        transparent 50%
                    );
                z-index: -1;
                animation: particleMove 20s ease-in-out infinite;
            }

            @keyframes particleMove {
                0%,
                100% {
                    transform: translateX(0) translateY(0) rotate(0deg);
                }
                33% {
                    transform: translateX(-30px) translateY(-30px)
                        rotate(120deg);
                }
                66% {
                    transform: translateX(30px) translateY(-15px) rotate(240deg);
                }
            }

            /* Títulos con efecto neón */
            .minecraft-title {
                text-shadow:
                    0 0 10px var(--minecraft-green),
                    0 0 20px var(--minecraft-green),
                    0 0 40px var(--minecraft-green);
                background: linear-gradient(
                    45deg,
                    var(--minecraft-green),
                    var(--neon-blue)
                );
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                animation: titleGlow 3s ease-in-out infinite alternate;
            }

            @keyframes titleGlow {
                from {
                    filter: brightness(1);
                }
                to {
                    filter: brightness(1.3);
                }
            }

            /* Cards con glassmorphism y bordes neón */
            .user-card {
                background: rgba(255, 255, 255, 0.1);
                border-radius: 1rem;
                backdrop-filter: blur(16px);
                -webkit-backdrop-filter: blur(16px);
                box-shadow: 0 8px 24px rgba(0, 255, 255, 0.2);
                padding: 2rem;
                width: 100%;
                max-width: 400px;
                transition: transform 0.3s ease;
            }

            /* Borde neón animado */
            .user-card::before {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                padding: 2px;
                background: linear-gradient(
                    45deg,
                    var(--minecraft-green),
                    var(--neon-blue),
                    var(--neon-purple),
                    var(--minecraft-green)
                );
                border-radius: 24px;
                z-index: -1;
                animation: borderGlow 4s linear infinite;
                opacity: 0.8;
            }

            .user-card::after {
                content: "";
                position: absolute;
                top: 2px;
                left: 2px;
                right: 2px;
                bottom: 2px;
                background: var(--glass-bg);
                border-radius: 22px;
                z-index: -1;
            }

            @keyframes borderGlow {
                0% {
                    background-position: 0% 50%;
                }
                50% {
                    background-position: 100% 50%;
                }
                100% {
                    background-position: 0% 50%;
                }
            }

            .user-card:hover {
                transform: translateY(-5px) scale(1.01);
                box-shadow: 0 12px 30px rgba(0, 255, 255, 0.3);
            }

            .user-card:hover::before {
                opacity: 1;
                animation-duration: 2s;
            }

            /* Estados de la card */
            .user-card.editing {
                background: rgba(15, 23, 42, 0.6);
                border: 2px solid var(--neon-blue);
                box-shadow:
                    0 0 40px rgba(0, 212, 255, 0.4),
                    inset 0 1px 0 rgba(255, 255, 255, 0.2);
            }

            .user-card.editing::before {
                background: linear-gradient(
                    45deg,
                    var(--neon-blue),
                    var(--neon-purple),
                    var(--neon-blue)
                );
                animation-duration: 1.5s;
            }

            /* Contenido de la card */
            .card-content {
                position: relative;
                z-index: 1;
                padding: 2rem;
            }

            /* Recursos */
            .resource-icon {
                width: 36px;
                height: 36px;
                font-size: 32px;
                filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.5));
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .resource-item {
                background: rgba(30, 41, 59, 0.6);
                backdrop-filter: blur(15px);
                border: 1px solid rgba(0, 255, 136, 0.2);
                border-radius: 16px;
                padding: 1rem 1.25rem;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
            }

            .resource-item::before {
                content: "";
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(
                    90deg,
                    transparent,
                    rgba(0, 255, 136, 0.1),
                    transparent
                );
                transition: left 0.6s ease;
            }

            .resource-item:hover::before {
                left: 100%;
            }

            .resource-item:hover {
                background: rgba(30, 41, 59, 0.8);
                border-color: rgba(0, 255, 136, 0.4);
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
            }

            .resource-count {
                background: linear-gradient(45deg, #fbbf24, #f59e0b);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                font-weight: 900;
                text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            }

            /* Botones con efectos neón */
            .btn {
                border: 2px solid;
                border-radius: 12px;
                font-weight: 700;
                text-transform: uppercase;
                letter-spacing: 0.5px;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
                backdrop-filter: blur(10px);
            }

            .btn::before {
                content: "";
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(
                    90deg,
                    transparent,
                    rgba(255, 255, 255, 0.2),
                    transparent
                );
                transition: left 0.5s ease;
            }

            .btn:hover::before {
                left: 100%;
            }

            .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
            }

            .btn-minecraft {
                background: linear-gradient(
                    145deg,
                    var(--minecraft-green-dark),
                    var(--minecraft-green-darker)
                );
                border-color: var(--minecraft-green);
                color: white;
                box-shadow: 0 0 20px rgba(0, 255, 136, 0.3);
            }

            .btn-minecraft:hover {
                background: linear-gradient(
                    145deg,
                    var(--minecraft-green),
                    var(--minecraft-green-dark)
                );
                box-shadow: 0 0 30px rgba(0, 255, 136, 0.5);
            }

            .btn-blue {
                background: linear-gradient(145deg, #0ea5e9, #0284c7);
                border-color: var(--neon-blue);
                color: white;
                box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
            }

            .btn-blue:hover {
                background: linear-gradient(145deg, #38bdf8, #0ea5e9);
                box-shadow: 0 0 30px rgba(0, 212, 255, 0.5);
            }

            .btn-red {
                background: linear-gradient(145deg, #dc2626, #b91c1c);
                border-color: #ef4444;
                color: white;
                box-shadow: 0 0 20px rgba(239, 68, 68, 0.3);
            }

            .btn-red:hover {
                background: linear-gradient(145deg, #ef4444, #dc2626);
                box-shadow: 0 0 30px rgba(239, 68, 68, 0.5);
            }

            .btn-gray {
                background: linear-gradient(145deg, #4b5563, #374151);
                border-color: #6b7280;
                color: white;
                box-shadow: 0 0 20px rgba(107, 114, 128, 0.3);
            }

            .btn-gray:hover {
                background: linear-gradient(145deg, #6b7280, #4b5563);
                box-shadow: 0 0 30px rgba(107, 114, 128, 0.5);
            }

            /* Controles de contador */
            .counter-btn {
                width: 36px;
                height: 36px;
                border-radius: 10px;
                font-weight: bold;
                font-size: 18px;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: all 0.2s ease;
                border: 2px solid;
                cursor: pointer;
                backdrop-filter: blur(10px);
            }

            .counter-btn:hover {
                transform: scale(1.15);
            }

            .counter-btn:active {
                transform: scale(0.95);
            }

            /* Modal */
            .modal-backdrop {
                background: rgba(0, 0, 0, 0.8);
                backdrop-filter: blur(15px);
            }

            .modal-content {
                background: var(--glass-bg);
                backdrop-filter: blur(30px);
                border: 2px solid var(--glass-border);
                box-shadow:
                    0 25px 60px rgba(0, 0, 0, 0.6),
                    0 0 40px rgba(0, 255, 136, 0.2);
            }

            /* Inputs */
            .input-minecraft {
                background: rgba(30, 41, 59, 0.8);
                border: 2px solid rgba(107, 114, 128, 0.4);
                backdrop-filter: blur(10px);
                transition: all 0.3s ease;
                font-weight: 600;
                color: white;
            }

            .input-minecraft:focus {
                border-color: var(--minecraft-green);
                box-shadow: 0 0 0 4px rgba(0, 255, 136, 0.15);
                outline: none;
                background: rgba(30, 41, 59, 0.9);
            }

            /* Animaciones de entrada */
            .user-card {
                animation: cardAppear 0.8s ease-out forwards;
                opacity: 0;
                transform: translateY(40px);
            }

            @keyframes cardAppear {
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            /* Delays escalonados */
            .user-card:nth-child(1) {
                animation-delay: 0.1s;
            }
            .user-card:nth-child(2) {
                animation-delay: 0.2s;
            }
            .user-card:nth-child(3) {
                animation-delay: 0.3s;
            }
            .user-card:nth-child(4) {
                animation-delay: 0.4s;
            }
            .user-card:nth-child(5) {
                animation-delay: 0.5s;
            }
            .user-card:nth-child(6) {
                animation-delay: 0.6s;
            }

            /* Estados ocultos */
            .hidden {
                display: none;
            }
            .edit-mode {
                display: block;
            }
            .view-mode {
                display: block;
            }
            #usersContainer {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));
                gap: 2rem;
                justify-content: center;
                align-items: start;
            }

            .btn {
                font-weight: 600;
                border-radius: 9999px;
                padding: 0.5rem 1rem;
                transition:
                    background 0.3s,
                    transform 0.2s;
            }

            .btn:hover {
                transform: scale(1.05);
            }

            .btn-blue {
                background: rgba(0, 180, 255, 0.8);
                color: white;
            }

            .btn-red {
                background: rgba(255, 80, 80, 0.8);
                color: white;
            }
        </style>
    </head>
    <body class="text-white min-h-screen">
        <div class="container mx-auto px-6 py-10">
            <!-- Header Component -->
            <div class="flex justify-between items-center mb-12">
                <h1 class="text-6xl font-black minecraft-title">
                    ⛏️ Minecraft Resources
                </h1>
                <button
                    class="btn btn-minecraft px-12 py-4 rounded-xl text-xl"
                    onclick="console.log('Agregar usuario clickeado'); showAddUserModal()"
                >
                    ✨ Agregar Usuario
                </button>
            </div>

            <!-- Modal Component -->
            <div
                id="addUserModal"
                class="fixed inset-0 modal-backdrop hidden z-50 flex items-center justify-center"
            >
                <div
                    class="modal-content p-10 rounded-3xl max-w-lg w-full mx-4"
                >
                    <h2
                        class="text-4xl font-bold mb-8 text-center minecraft-title"
                    >
                        🎮 Nuevo Usuario
                    </h2>
                    <form
                        hx-post="http://localhost:3001/api/users"
                        hx-target="#usersContainer"
                        hx-swap="innerHTML"
                        hx-on::after-request="hideAddUserModal(); this.reset();"
                    >
                        <input
                            type="text"
                            name="name"
                            placeholder="Nombre del usuario"
                            class="input-minecraft w-full p-5 rounded-2xl mb-8 text-white text-xl"
                            required
                        />
                        <div class="flex gap-6">
                            <button
                                type="submit"
                                class="btn btn-minecraft flex-1 p-5 rounded-2xl text-xl"
                            >
                                🎯 Crear Usuario
                            </button>
                            <button
                                type="button"
                                onclick="hideAddUserModal()"
                                class="btn btn-gray flex-1 p-5 rounded-2xl text-xl"
                            >
                                ❌ Cancelar
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Users Container -->
            <div
                id="usersContainer"
                hx-get="http://localhost:3001/api/users"
                hx-trigger="load"
                hx-swap="innerHTML"
                class="flex flex-wrap justify-center items-start gap-8 p-6"
            >
                <!-- Los usuarios se cargarán aquí -->
            </div>
        </div>

        <script>
            // ========== CONFIGURACIÓN ==========
            const CONFIG = {
                resourceIcons: {
                    diamonds: "💎",
                    gold: "🟨",
                    iron: "⚫",
                    emeralds: "💚",
                    coal: "⚫",
                    redstone: "🔴",
                },
                resourceNames: {
                    diamonds: "Diamantes",
                    gold: "Oro",
                    iron: "Hierro",
                    emeralds: "Esmeraldas",
                    coal: "Carbón",
                    redstone: "Redstone",
                },
            };

            // ========== COMPONENTES ==========

            // Componente: Vista de recursos (solo lectura)
            function createResourceView(resources) {
                return Object.entries(resources || {})
                    .map(
                        ([resource, amount]) => `
                        <div class="resource-item flex justify-between items-center">
                            <div class="flex items-center gap-4">
                                <div class="resource-icon">
                                    ${CONFIG.resourceIcons[resource] || "⚪"}
                                </div>
                                <span class="font-bold text-lg">
                                    ${CONFIG.resourceNames[resource] || resource}
                                </span>
                            </div>
                            <span class="resource-count text-2xl font-black">
                                ${amount}
                            </span>
                        </div>
                    `
                    )
                    .join("");
            }

            // Componente: Vista de edición de recursos
            function createResourceEdit(user) {
                return Object.entries(user.resources || {})
                    .map(
                        ([resource, amount]) => `
                        <div class="resource-item flex items-center justify-between p-4">
                            <div class="flex items-center gap-3">
                                <div class="resource-icon text-xl">
                                    ${CONFIG.resourceIcons[resource] || "⚪"}
                                </div>
                                <span class="font-bold text-sm">
                                    ${CONFIG.resourceNames[resource] || resource}
                                </span>
                            </div>
                            <div class="flex items-center gap-3">
                                <button 
                                    type="button" 
                                    onclick="updateResource('${user._id}', '${resource}', -1)" 
                                    class="counter-btn bg-red-600 hover:bg-red-500 border-red-400 text-white"
                                >
                                    -
                                </button>
                                <input 
                                    type="number" 
                                    id="${user._id}-${resource}"
                                    name="resources.${resource}" 
                                    value="${amount}" 
                                    min="0" 
                                    class="w-20 h-9 bg-gray-700 text-center text-sm rounded-lg border border-gray-500 text-white font-bold focus:border-green-400 focus:outline-none"
                                >
                                <button 
                                    type="button" 
                                    onclick="updateResource('${user._id}', '${resource}', 1)" 
                                    class="counter-btn bg-green-600 hover:bg-green-500 border-green-400 text-white"
                                >
                                    +
                                </button>
                            </div>
                        </div>
                    `
                    )
                    .join("");
            }

            // Componente: Tarjeta de usuario completa
            function createUserCard(user) {
                return `
					<div id="card-${user._id}" class="user-card mx-auto max-w-lg">
						<div class="card-content">
							<div class="text-center mb-6">
								<h3 class="text-3xl font-black minecraft-title mb-2">
									🎮 ${user.name}
								</h3>
								<div class="w-full h-1 bg-gradient-to-r from-transparent via-green-400 to-transparent rounded-full opacity-60"></div>
							</div>

							<div id="resources-${user._id}" class="space-y-4 mb-6">
								${createResourceView(user.resources)}
							</div>

							<div id="edit-${user._id}" class="space-y-4 mb-6 hidden">
								${createResourceEdit(user)}
							</div>

							<div class="flex flex-col gap-3">
								<div class="flex gap-3">
									<button onclick="console.log('Editar clic'); toggleEditForm('${user._id}')" class="btn btn-blue flex-1 py-3 rounded-xl text-base">
										🛠️ Editar Recursos
									</button>

									<button
										class="btn btn-red flex-1 py-3 rounded-xl"
										onclick="console.log('Eliminar usuario ${user.name}');"
									>
										🗑️ Eliminar
									</button>

								</div>
							</div>
						</div>
					</div>
				`;
            }

            // ========== FUNCIONES GLOBALES ==========

            window.showAddUserModal = function () {
                document
                    .getElementById("addUserModal")
                    .classList.remove("hidden");
            };

            window.hideAddUserModal = function () {
                document.getElementById("addUserModal").classList.add("hidden");
            };

            window.toggleEditMode = function (userId) {
                const card = document.getElementById(`card-${userId}`);
                const viewMode = document.getElementById(`view-${userId}`);
                const editMode = document.getElementById(`edit-${userId}`);

                if (viewMode.classList.contains("hidden")) {
                    // Salir del modo edición
                    viewMode.classList.remove("hidden");
                    editMode.classList.add("hidden");
                    card.classList.remove("editing");
                } else {
                    // Entrar en modo edición
                    viewMode.classList.add("hidden");
                    editMode.classList.remove("hidden");
                    card.classList.add("editing");
                }
            };

            window.updateResource = function (userId, resource, change) {
                const input = document.getElementById(`${userId}-${resource}`);
                if (input) {
                    const currentValue = parseInt(input.value) || 0;
                    const newValue = Math.max(0, currentValue + change);
                    input.value = newValue;
                }
            };

            // ========== RENDERIZADO PRINCIPAL ==========

            function renderUsers(users) {
                if (!Array.isArray(users)) {
                    console.error("Expected array, got:", users);
                    return '<p class="text-red-400 text-xl text-center col-span-full">❌ Error cargando usuarios</p>';
                }

                if (users.length === 0) {
                    return `
                        <div class="col-span-full text-center py-20">
                            <div class="text-8xl mb-6">🏗️</div>
                            <p class="text-gray-300 text-3xl font-bold mb-2">No hay usuarios registrados</p>
                            <p class="text-gray-500 text-xl">¡Agrega tu primer usuario para comenzar!</p>
                        </div>
                    `;
                }

                return users.map(createUserCard).join("");
            }

            // ========== EVENT LISTENERS ==========

            // Manejo de respuestas HTMX
            document.body.addEventListener(
                "htmx:afterRequest",
                function (event) {
                    if (event.detail.target.id === "usersContainer") {
                        try {
                            const users = JSON.parse(
                                event.detail.xhr.responseText
                            );
                            event.detail.target.innerHTML = renderUsers(users);
                        } catch (error) {
                            console.error("Error parsing response:", error);
                            event.detail.target.innerHTML =
                                '<p class="text-red-400 text-xl text-center col-span-full">❌ Error cargando datos</p>';
                        }
                    }
                }
            );

            // Cerrar modal con Escape
            document.addEventListener("keydown", function (event) {
                if (event.key === "Escape") {
                    hideAddUserModal();
                }
            });

            // Cerrar modal al hacer clic fuera
            document
                .getElementById("addUserModal")
                .addEventListener("click", function (event) {
                    if (event.target === this) {
                        hideAddUserModal();
                    }
                });

            window.toggleEditForm = function (userId) {
                const section = document.getElementById(`edit-${userId}`);
                section.classList.toggle("hidden");
            };
        </script>
    </body>
</html>
